/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignedInRouteImport } from './routes/_signed-in'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PostsIndexRouteImport } from './routes/posts.index'
import { Route as SignInSplatRouteImport } from './routes/sign-in.$'
import { Route as PostsPostIdRouteImport } from './routes/posts.$postId'
import { Route as SignedInStatusesRouteImport } from './routes/_signed-in/statuses'
import { Route as PostsPostIdDeepRouteImport } from './routes/posts_.$postId.deep'
import { Route as SignedInTasksSplatRouteImport } from './routes/_signed-in/tasks.$'

const SignedInRoute = SignedInRouteImport.update({
  id: '/_signed-in',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsIndexRoute = PostsIndexRouteImport.update({
  id: '/posts/',
  path: '/posts/',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInSplatRoute = SignInSplatRouteImport.update({
  id: '/sign-in/$',
  path: '/sign-in/$',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsPostIdRoute = PostsPostIdRouteImport.update({
  id: '/posts/$postId',
  path: '/posts/$postId',
  getParentRoute: () => rootRouteImport,
} as any)
const SignedInStatusesRoute = SignedInStatusesRouteImport.update({
  id: '/statuses',
  path: '/statuses',
  getParentRoute: () => SignedInRoute,
} as any)
const PostsPostIdDeepRoute = PostsPostIdDeepRouteImport.update({
  id: '/posts_/$postId/deep',
  path: '/posts/$postId/deep',
  getParentRoute: () => rootRouteImport,
} as any)
const SignedInTasksSplatRoute = SignedInTasksSplatRouteImport.update({
  id: '/tasks/$',
  path: '/tasks/$',
  getParentRoute: () => SignedInRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/statuses': typeof SignedInStatusesRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/sign-in/$': typeof SignInSplatRoute
  '/posts': typeof PostsIndexRoute
  '/tasks/$': typeof SignedInTasksSplatRoute
  '/posts/$postId/deep': typeof PostsPostIdDeepRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/statuses': typeof SignedInStatusesRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/sign-in/$': typeof SignInSplatRoute
  '/posts': typeof PostsIndexRoute
  '/tasks/$': typeof SignedInTasksSplatRoute
  '/posts/$postId/deep': typeof PostsPostIdDeepRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_signed-in': typeof SignedInRouteWithChildren
  '/_signed-in/statuses': typeof SignedInStatusesRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/sign-in/$': typeof SignInSplatRoute
  '/posts/': typeof PostsIndexRoute
  '/_signed-in/tasks/$': typeof SignedInTasksSplatRoute
  '/posts_/$postId/deep': typeof PostsPostIdDeepRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/statuses'
    | '/posts/$postId'
    | '/sign-in/$'
    | '/posts'
    | '/tasks/$'
    | '/posts/$postId/deep'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/statuses'
    | '/posts/$postId'
    | '/sign-in/$'
    | '/posts'
    | '/tasks/$'
    | '/posts/$postId/deep'
  id:
    | '__root__'
    | '/'
    | '/_signed-in'
    | '/_signed-in/statuses'
    | '/posts/$postId'
    | '/sign-in/$'
    | '/posts/'
    | '/_signed-in/tasks/$'
    | '/posts_/$postId/deep'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SignedInRoute: typeof SignedInRouteWithChildren
  PostsPostIdRoute: typeof PostsPostIdRoute
  SignInSplatRoute: typeof SignInSplatRoute
  PostsIndexRoute: typeof PostsIndexRoute
  PostsPostIdDeepRoute: typeof PostsPostIdDeepRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_signed-in': {
      id: '/_signed-in'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof SignedInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/': {
      id: '/posts/'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in/$': {
      id: '/sign-in/$'
      path: '/sign-in/$'
      fullPath: '/sign-in/$'
      preLoaderRoute: typeof SignInSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/$postId': {
      id: '/posts/$postId'
      path: '/posts/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof PostsPostIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_signed-in/statuses': {
      id: '/_signed-in/statuses'
      path: '/statuses'
      fullPath: '/statuses'
      preLoaderRoute: typeof SignedInStatusesRouteImport
      parentRoute: typeof SignedInRoute
    }
    '/posts_/$postId/deep': {
      id: '/posts_/$postId/deep'
      path: '/posts/$postId/deep'
      fullPath: '/posts/$postId/deep'
      preLoaderRoute: typeof PostsPostIdDeepRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_signed-in/tasks/$': {
      id: '/_signed-in/tasks/$'
      path: '/tasks/$'
      fullPath: '/tasks/$'
      preLoaderRoute: typeof SignedInTasksSplatRouteImport
      parentRoute: typeof SignedInRoute
    }
  }
}

interface SignedInRouteChildren {
  SignedInStatusesRoute: typeof SignedInStatusesRoute
  SignedInTasksSplatRoute: typeof SignedInTasksSplatRoute
}

const SignedInRouteChildren: SignedInRouteChildren = {
  SignedInStatusesRoute: SignedInStatusesRoute,
  SignedInTasksSplatRoute: SignedInTasksSplatRoute,
}

const SignedInRouteWithChildren = SignedInRoute._addFileChildren(
  SignedInRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SignedInRoute: SignedInRouteWithChildren,
  PostsPostIdRoute: PostsPostIdRoute,
  SignInSplatRoute: SignInSplatRoute,
  PostsIndexRoute: PostsIndexRoute,
  PostsPostIdDeepRoute: PostsPostIdDeepRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
